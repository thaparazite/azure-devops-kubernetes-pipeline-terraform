trigger:
- main

pool:
  vmImage: ubuntu-latest
  
# stages -> stage -> jobs -> job -> steps -> bash

stages:
- stage: Build
  jobs: 
  - job: FirstJob 
    steps:
    - bash: echo Build FirstJob
    - bash: echo $(PipelineLevelVariable)
    - bash: echo $(Build.BuildId)
    - bash: echo $(Build.BuildNumber)
    - bash: echo $(Build.SourceBranchName)
    - bash: echo $(Build.SourcesDirectory)
    - bash: echo $(System.DefaultWorkingDirectory)
    - bash: ls -R $(System.DefaultWorkingDirectory)
    - bash: echo $(Build.ArtifactStagingDirectory)
    - bash: echo $(Build.StageRequestedBy)
    - bash: java -version
    - bash: python --version
    - bash: node --version
    - bash: mvn -version
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: |
          **/*.yaml
          **/*.tf
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - bash: ls -R $(Build.ArtifactStagingDirectory)
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'


  # - job: SecondJob 
  #   steps:
  #   - bash: echo Build SecondJob

# - stage: DevDeploy
#   variables:
#     environment: Dev
#   dependsOn: Build
#   jobs: 
#   - job: DevDeployJob 
#     steps:
#     - bash: echo $(environment)DeployJob

# - stage: QADeploy
#   variables:
#     environment: QA
#   dependsOn: Build
#   jobs: 
#   - job: QADeployJob 
#     steps:
#     - bash: echo $(environment)DeployJob

# - stage: ProductionDeploy
#   variables:
#     environment: Production
#   dependsOn:
#   - DevDeploy
#   - QADeploy
#   jobs: 
#   - job: ProductionDeployJob 
#     steps:
#     - bash: echo $(environment)DeployJob



